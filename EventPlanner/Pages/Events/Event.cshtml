@page "/event/{id:int}"
@model EventPlanner.Pages.EventModel
@using System.Globalization
@using EventPlanner.Models
@using EventPlanner.Helpers
@{
    ViewData["Title"] = Model.CurrentEvent.Name;
    ViewData["IsFixed"] = true;
    Layout = "_Page";
    var culture = new CultureInfo("ru-RU");
    var id = User.FindFirst("Id")?.Value;
}

@section PageCover 
{
    <div class="cover">
        <div class="cover-backgrounds">
            <div class="cover-img">
                <img src="@Model.CurrentEvent.CoverUrl" alt="Обложка">
                <div class="cover-shadow"></div>
            </div>
        </div>
    </div>
}

@section PageHeader 
{
    <h1 class="desc-title">
        @Model.CurrentEvent.Name
    </h1>
    @if (id is not null)
    {
        <form method="post">
            @if (!Model.IsFavorite)
            {
                <button class="action" asp-page-handler="addfav">
                    <i class="fa-solid fa-bookmark bookmark"></i>
                </button>
            }
            else
            {
                <button class="action" asp-page-handler="deletefav">
                    <i class="fa-solid fa-bookmark bookmark bookmark--selected"></i>
                </button>
            }
        </form>
    }
}

@section PageContent 
{
    <div class="event-main">
        <div class="desc-box">
            <div class="tags-box">
                <i class="fa-solid fa-tags tag-icon"></i>
                <ul class="tags">
                    <li class="tag">@Model.CurrentEvent.Category.Title</li>
                </ul>
            </div>
        </div>
        <div class="text-box">
            @Model.CurrentEvent.Description
        </div>
    </div>
    <div class="event-box">
        <div class="date">
            @if (Model.CurrentEvent.StartTime > 0)
            {
                <div class="date-title">
                    <i class="fa-solid fa-calendar"></i>
                    @DateHelper.GetDate(Model.CurrentEvent.StartTime, culture)
                </div>
                <div class="date-day event-subtext">
                    @DateHelper.GetDayName(Model.CurrentEvent.StartTime, culture)
                </div>
                <div class="date-time event-subtext">
                    В @TimeHelper.GetTime(Model.CurrentEvent.StartTime)
                </div>
            }
            else if (Model.CurrentEvent.EndTime > 0)
            {
                <div class="date-title">
                    <i class="fa-solid fa-calendar"></i>
                    До @DateHelper.GetDate(Model.CurrentEvent.EndTime, culture)
                </div>
                <div class="date-day event-subtext">
                    @DateHelper.GetDayName(Model.CurrentEvent.EndTime, culture)
                </div>
            }
            else
            {
                <div class="event-subtext">
                    <i class="fa-solid fa-calendar"></i>
                    Автор не указал дату
                </div>
            }
        </div>
        <div class="location">
            @if (Model.CurrentEvent.Type.Name == "Offline") 
            {
                <div class="location-title">
                    <i class="fa-solid fa-location-dot"></i>
                    @Model.CurrentEvent.Address?.Title
                </div>
                <div class="location-address event-subtext">
                    @AddressHelper.GetAddress(Model.CurrentEvent.Address)    
                </div>
            }
            else
            {
                <div class="event-subtext">
                    <i class="fa-solid fa-desktop"></i>
                    Мероприятие пройдёт онлайн
                </div>
            }
        </div>
        @if (id is not null)
        {
            var parsedId = int.Parse(id);
            var isParticipant = Model.CurrentEvent.Participants.FirstOrDefault(p => p.UserId == parsedId) is not null; 
            var getHandler = isParticipant ? "delete" : "";
            <div class="actions">
                @if (Model.CurrentEvent.CreatorId != parsedId)
                {
                    <form method="post" asp-page="Participant" asp-page-handler="@getHandler" asp-route-id="@Model.CurrentEvent.Id" asp-route-userid="@parsedId">
                        @if (!Model.IsValid)
                        {
                            <div class="action-validation-error">Произошла ошибка</div>
                        }
                        @if (isParticipant)
                        {
                            <button type="submit" class="button button--red">Отказаться от участия</button>
                        }
                        else
                        {
                            <button type="submit" class="button button--green">Участвовать</button>
                        }
                    </form>
                }
                else
                {
                    <a asp-page="EditEvent" asp-route-id="@Model.Id" class="button button--green">Редактировать</a>
                    <form method="post">
                        <button type="submit" class="button button--red">Удалить</button>
                    </form>
                }
            </div>
        }
    </div>
}

@section Styles {
    <link rel="stylesheet" href="~/css/events/event.css" asp-append-version="true" />
}
